<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yineng.dev_V_3_0.dao.ActStudyCommentMapper" >
  <resultMap id="BaseResultMap" type="com.yineng.dev_V_3_0.model.ActStudyComment" >
    <id column="cId" property="cId" jdbcType="VARCHAR" />
    <result column="fileId" property="fileId" jdbcType="VARCHAR" />
    <result column="commenterId" property="commenterId" jdbcType="VARCHAR" />
    <result column="commenterName" property="commenterName" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="ownerId" property="ownerId" jdbcType="VARCHAR" />
    <result column="ownerName" property="ownerName" jdbcType="VARCHAR" />
    <result column="taskId" property="taskId" jdbcType="VARCHAR" />
    <result column="taskName" property="taskName" jdbcType="VARCHAR" />
    <result column="taskDefineKey" property="taskDefineKey" jdbcType="VARCHAR" />
    <result column="processInstanceId" property="processInstanceId" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="VARCHAR" />
    <result column="lastUpdateTime" property="lastUpdateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    cId, fileId, commenterId, commenterName, comments, ownerId, ownerName, taskId, taskName, 
    taskDefineKey, processInstanceId, createTime, lastUpdateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from act_study_comment
    where cId = #{cId,jdbcType=VARCHAR}
  </select>
  <select id="selectActStudyComments" resultMap="BaseResultMap" parameterType="com.yineng.dev_V_3_0.model.ActStudyComment" >
    select 
    <include refid="Base_Column_List" />
    from act_study_comment
    <where>
    	<if test="cId != null" >
        	cId = #{cId,jdbcType=VARCHAR}
      	</if>
      	<if test="fileId != null" >
        	and fileId = #{fileId,jdbcType=VARCHAR}
      	</if>
      	<if test="commenterId != null" >
        	and commenterId = #{commenterId,jdbcType=VARCHAR}
      	</if>
      	<if test="ownerId != null" >
        	and ownerId = #{ownerId,jdbcType=VARCHAR}
      	</if>
      	<if test="taskId != null" >
        	and taskId = #{taskId,jdbcType=VARCHAR}
      	</if>
      	<if test="taskDefineKey != null" >
        	and taskDefineKey = #{taskDefineKey,jdbcType=VARCHAR}
      	</if>
      	<if test="processInstanceId != null" >
        	and processInstanceId = #{processInstanceId,jdbcType=VARCHAR}
      	</if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from act_study_comment
    where cId = #{cId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yineng.dev_V_3_0.model.ActStudyComment" >
    insert into act_study_comment (cId, fileId, commenterId, 
      commenterName, comments, ownerId, 
      ownerName, taskId, taskName, 
      taskDefineKey, processInstanceId, createTime, 
      lastUpdateTime)
    values (#{cId,jdbcType=VARCHAR}, #{fileId,jdbcType=VARCHAR}, #{commenterId,jdbcType=VARCHAR}, 
      #{commenterName,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, 
      #{ownerName,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, 
      #{taskDefineKey,jdbcType=VARCHAR}, #{processInstanceId,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{lastUpdateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yineng.dev_V_3_0.model.ActStudyComment" >
    insert into act_study_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cId != null" >
        cId,
      </if>
      <if test="fileId != null" >
        fileId,
      </if>
      <if test="commenterId != null" >
        commenterId,
      </if>
      <if test="commenterName != null" >
        commenterName,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="ownerId != null" >
        ownerId,
      </if>
      <if test="ownerName != null" >
        ownerName,
      </if>
      <if test="taskId != null" >
        taskId,
      </if>
      <if test="taskName != null" >
        taskName,
      </if>
      <if test="taskDefineKey != null" >
        taskDefineKey,
      </if>
      <if test="processInstanceId != null" >
        processInstanceId,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="lastUpdateTime != null" >
        lastUpdateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cId != null" >
        #{cId,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null" >
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="commenterId != null" >
        #{commenterId,jdbcType=VARCHAR},
      </if>
      <if test="commenterName != null" >
        #{commenterName,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerName != null" >
        #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskDefineKey != null" >
        #{taskDefineKey,jdbcType=VARCHAR},
      </if>
      <if test="processInstanceId != null" >
        #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yineng.dev_V_3_0.model.ActStudyComment" >
    update act_study_comment
    <set >
      <if test="fileId != null" >
        fileId = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="commenterId != null" >
        commenterId = #{commenterId,jdbcType=VARCHAR},
      </if>
      <if test="commenterName != null" >
        commenterName = #{commenterName,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        ownerId = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerName != null" >
        ownerName = #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        taskId = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        taskName = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskDefineKey != null" >
        taskDefineKey = #{taskDefineKey,jdbcType=VARCHAR},
      </if>
      <if test="processInstanceId != null" >
        processInstanceId = #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        lastUpdateTime = #{lastUpdateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where cId = #{cId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yineng.dev_V_3_0.model.ActStudyComment" >
    update act_study_comment
    set fileId = #{fileId,jdbcType=VARCHAR},
      commenterId = #{commenterId,jdbcType=VARCHAR},
      commenterName = #{commenterName,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      ownerId = #{ownerId,jdbcType=VARCHAR},
      ownerName = #{ownerName,jdbcType=VARCHAR},
      taskId = #{taskId,jdbcType=VARCHAR},
      taskName = #{taskName,jdbcType=VARCHAR},
      taskDefineKey = #{taskDefineKey,jdbcType=VARCHAR},
      processInstanceId = #{processInstanceId,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR},
      lastUpdateTime = #{lastUpdateTime,jdbcType=VARCHAR}
    where cId = #{cId,jdbcType=VARCHAR}
  </update>
</mapper>