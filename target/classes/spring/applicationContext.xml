<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/websocket  http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">

    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="com">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="com.core.base.mybatis.annotation.YNRepository"/>
    </context:component-scan>

    <!-- 启动AOP -->
    <aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 
    <bean id="messageHandler" class="com.core.interceptor.MessageHandler"/>
     -->
    <!-- properties 资源文件 -->
    <bean id="propertiesConfig"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:applicationContext.properties</value>
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>

    <bean class="com.util.ConfigUtils">
        <property name="properties" ref="propertiesConfig"/>
    </bean>

    <!-- 数据源配置 -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <!-- 连接信息 -->
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 连接池信息 -->
        <property name="maxActive" value="${jdbc.pool.maxActive}" />
        <property name="maxIdle" value="${jdbc.pool.maxIdle}" />
        <property name="initialSize" value="${jdbc.pool.initialSize}" />
        <property name="defaultAutoCommit" value="false" />

        <!-- 连接检查 -->
        <property name="testWhileIdle" value="${jdbc.pool.testWhileIdle}" />
        <property name="testOnBorrow" value="${jdbc.pool.testOnBorrow}" />
        <property name="testOnReturn" value="${jdbc.pool.testOnReturn}" />
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}" />
        <property name="validationQuery" value="${jdbc.pool.validationQuery}" />
        <property name="validationInterval" value="${jdbc.pool.validationInterval}" />
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}" />
        <property name="jdbcInterceptors" value="${jdbc.pool.jdbcInterceptors}" />
    </bean>

    <!-- 事务管理  -->  
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource" />  
	</bean>

    <aop:config>
        <aop:pointcut id="ovuServiceMethods" expression="execution(* com..service.impl..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="ovuServiceMethods" />
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
        	<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />  
            <tx:method name="find*" read-only="true" />
            <tx:method name="load*" read-only="true" />
            <tx:method name="get*" read-only="true" />
            <tx:method name="query*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="*_tran_new" propagation="REQUIRES_NEW" isolation="READ_COMMITTED"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath*:mybatis/mapper/**/*.xml" />
    </bean>

    <!-- 自动扫描所有的Mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="annotationClass" value="com.core.base.mybatis.annotation.YNRepository"/>
    </bean>
    
    <!-- activiti engine -->
  <!-- 4种 历史信息级别：
	  none: 不保存任何历史记录，可以提高系统性能；
	  activity: 保存所有的流程实例、任务、活动信息；
	  audit: 也是Activiti的默认级别，保存所有的流程实例、任务、活动、表单属性；
	  full: 最完整的历史记录，除了包含audit级别的信息之外还能保存详细，例如：流程变量。
	     对于几种级别根据对功能的要求选择，如果需要日后跟踪详细可以开启full。
  -->
  <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
    <property name="processEngineName" value="engine" />
    <property name="dataSource" ref="dataSource" />
    <property name="transactionManager" ref="transactionManager" />
    <property name="databaseSchemaUpdate" value="true" />
    <property name="jobExecutorActivate" value="true" />
    <!-- <property name="deploymentResources" value="classpath*:*.bpmn" /> -->
    <property name="processDefinitionCacheLimit" value="200" />
    <property name="history" value="full" />
  </bean>

  <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
    <property name="processEngineConfiguration" ref="processEngineConfiguration" />
  </bean>
 
  <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
  <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
  <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />

  <bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
  <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
  <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />  
  <!-- <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" /> -->

  
  <bean id="courseEngine" class="com.yineng.dev_V_3_0.bpmn.CourseEngine" />
    
</beans>